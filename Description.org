* SMC Planetary nebula in SPLUS

  Given that the SMC was observed by S-PLUS and i is already available a catalog of SMC SPLUS, I am going to looking for new PNe in this galaxy. For that I will apply my SPLUS color criteria 
and the statistical techniques (PCA, logistic regression, LDA). SMC was fully  observed, this means that many PNe should be in the SPLUS SMC catalog.
So to explore the possibility to find for new PNe, I verified that by using known PNe and put them in my colour diagrams and I will try to classify them like Pne
using the statistical techniques. 

** Data verification
 + I found this sample of SMC PNe: vizier-> J/A+A/472/101/table7. Chemical evolution of SMC planetary nebulae (Idiart+, 2007, 2007A&A...472..101I)
   This catalog has 46 PNe - > The file is pne-smc-2007.csv.
 + I made cross matching  between this catalog and SPLUS catalog. I found 21 matches using a 1 arcsec of radii. The file is pne-smc-splus-match-2007.fits (.dat)
 + I put the final matches in my diagram, the good news is that all the object, except 3, are located in the PNe region.
  - For that I wrote a new program to make the color-colour diagrams with this sample. I did this, because the name of the 
    columns of table of the SPLUS SMC catalog are different, the program is: 

                           python ../varios-programas/color-diagrams-splusdr2_automatic-v2.py pne-smc-splus-match-2007
    
     For this the file must be pne-smc-splus-match-2007.fits

 + I made the S-spectrum for all the objects. I also wrote the a new program based on the other to display the spectrum:

                             python ../new-programs/photo-spectra-SPLUSDR2-v2.py pne-smc-splus-match-2007 --debug  
    
   For this the file must be pne-smc-splus-match-2007.dat
 
 + All is resumed in the file pne-smc-splus.tex.
     - For that I wrote a program to made the table eith of th figures (photospectrum,): python ../varios-programas/latex-figs.py

#+BEGIN_SRC python :eval no :tangle latex-figs.py     

      from astropy.io import fits
      import os
      import glob
      import json
      import matplotlib.pyplot as plt
      import pandas as pd
      #import StringIO
      from astropy.table import Table
      import seaborn as sns
      import sys
      from scipy.optimize import fsolve
      import colours

      #Read de files
      pattern = "*aper.pdf"
      file_list = glob.glob(pattern)

      pattern1 = "*auto.pdf"
      file_list1 = glob.glob(pattern1)

      pattern2 = "*petro.pdf"
      file_list2 = glob.glob(pattern2)

      latex_columns = ['Aper_3', 'Auto', 'Petro']
    
      #print('\n'.join(map(lambda x: 'Test{0:04}'.format(x), range(0, 10000))))

      ap3, apa, app = [], [], []
      for a, b, c in zip(file_list, file_list1, file_list2):
          ap3.append(a)
          apa.append(b)
          app.append(c)

      ap3.sort()
      apa.sort()
      app.sort()
      table_fig = Table([ap3, apa, app],  names=('Aper_3', 'Auto', 'Petro'), meta={'name': 'first table'})
      #table_fig.sort('Auto')
      table_fig.write('table-figs.tex', format = "ascii.latex", overwrite=True) 
  
#+END_SRC
